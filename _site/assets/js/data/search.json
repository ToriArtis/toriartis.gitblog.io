[
  
  {
    "title": "Customize the Favicon",
    "url": "/posts/customize-the-favicon/",
    "categories": "Blogging, Tutorial",
    "tags": "favicon",
    "date": "2019-08-11 01:34:00 +0900",
    





    
    "snippet": "The favicons of Chirpy are placed in the directory assets/img/favicons/. You may want to replace them with your own. The following sections will guide you to create and replace the default favicons...",
    "content": "The favicons of Chirpy are placed in the directory assets/img/favicons/. You may want to replace them with your own. The following sections will guide you to create and replace the default favicons.Generate the faviconPrepare a square image (PNG, JPG, or SVG) with a size of 512x512 or more, and then go to the online tool Real Favicon Generator and click the button Select your Favicon image to upload your image file.In the next step, the webpage will show all usage scenarios. You can keep the default options, scroll to the bottom of the page, and click the button Generate your Favicons and HTML code to generate the favicon.Download &amp; ReplaceDownload the generated package, unzip and delete the following two from the extracted files:  browserconfig.xml  site.webmanifestAnd then copy the remaining image files (.PNG and .ICO) to cover the original files in the directory assets/img/favicons/ of your Jekyll site. If your Jekyll site doesn’t have this directory yet, just create one.The following table will help you understand the changes to the favicon files:            File(s)      From Online Tool      From Chirpy                  *.PNG      ✓      ✗              *.ICO      ✓      ✗        ✓ means keep, ✗ means delete.The next time you build the site, the favicon will be replaced with a customized edition."
  },
  
  {
    "title": "Getting Started",
    "url": "/posts/getting-started/",
    "categories": "Blogging, Tutorial",
    "tags": "getting started",
    "date": "2019-08-09 21:55:00 +0900",
    





    
    "snippet": "PrerequisitesFollow the instructions in the Jekyll Docs to complete the installation of the basic environment. Git also needs to be installed.InstallationCreating a New SiteThere are two ways to cr...",
    "content": "PrerequisitesFollow the instructions in the Jekyll Docs to complete the installation of the basic environment. Git also needs to be installed.InstallationCreating a New SiteThere are two ways to create a new repository for this theme:  Using the Chirpy Starter — Easy to upgrade, isolates irrelevant project files so you can focus on writing.  GitHub Fork — Convenient for custom development, but difficult to upgrade. Unless you are familiar with Jekyll and are determined to tweak or contribute to this project, this approach is not recommended.Option 1. Using the Chirpy StarterSign in to GitHub and browse to Chirpy Starter, click the button Use this template &gt; Create a new repository, and name the new repository USERNAME.github.io, where USERNAME represents your GitHub username.Option 2. GitHub ForkSign in to GitHub to fork Chirpy, and then rename it to USERNAME.github.io (USERNAME means your username).Next, clone the repository to your local machine, make sure it has Node.js installed, then go to the root directory of the repo and run the following command:$ bash tools/init.sh  If you don’t want to deploy your site on GitHub Pages, append option --no-gh at the end of the above command.The above command will:  Check out the code to the latest tag (to ensure the stability of your site: as the code for the default branch is under development).  Remove non-essential sample files and take care of GitHub-related files.  Build CSS/JS assets files and then make them tracked by Git.  Automatically create a new commit to save the changes above.Installing DependenciesBefore running local server for the first time, go to the root directory of your site and run:$ bundleUsageConfigurationUpdate the variables in _config.yml as needed. Some typical options include:  url  avatar  timezone  langSocial Contact OptionsSocial contact options are displayed at the bottom of the sidebar. You can enable or disable specific contacts in the _data/contact.yml file.Customizing the StylesheetTo customize the stylesheet, copy the theme’s assets/css/jekyll-theme-chirpy.scss file to the same path in your Jekyll site, and add your custom styles at the end of the file.Starting with version 6.2.0, if you want to overwrite the SASS variables defined in _sass/addon/variables.scss, copy the main SASS file _sass/main.scss to the _sass directory in your site’s source, then create a new file _sass/variables-hook.scss and assign your new values there.Customizing Static AssetsStatic assets configuration was introduced in version 5.1.0. The CDN of the static assets is defined in _data/origin/cors.yml. You can replace some of them based on to the network conditions in the region where your website is published.Also, if you’d like to self-host the static assets, please refer to the chirpy-static-assets.Running Local ServerYou may want to preview the site contents before publishing, so just run it by:$ bundle exec jekyll sAfter a few seconds, the local service will be published at http://127.0.0.1:4000.DeploymentBefore deploying, check the _config.yml file and ensure the url is configured correctly. If you prefer a project site and don’t use a custom domain, or if you want to visit your website with a base URL on a web server other than GitHub Pages, remember to set the baseurl to your project name, starting with a slash, e.g., /project-name.Now you can choose ONE of the following methods to deploy your Jekyll site.Deploy Using GitHub ActionsPrepare the following:  If you’re on the GitHub Free plan, keep your site repository public.      If you have committed Gemfile.lock to the repository, and your local machine is not running Linux, update the platform list of the lock file:    $ bundle lock --add-platform x86_64-linux      Next, configure the Pages service:      Go to your repository on GitHub. Select the Settings tab, then click Pages in the left navigation bar. In the Source section (under Build and deployment), select GitHub Actions from the dropdown menu.        Push any commits to GitHub to trigger the Actions workflow. In the Actions tab of your repository, you should see the workflow Build and Deploy running. Once the build is complete and successful, the site will be deployed automatically.  You can now visit the URL provided by GitHub to access your site.Manual Build and DeploymentFor self-hosted servers, you will need to build the site on your local machine and then upload the site files to the server.Navigate to the root of the source project, and build your site with the following command:$ JEKYLL_ENV=production bundle exec jekyll bUnless you specified the output path, the generated site files will be placed in the _site folder of the project’s root directory. Upload these files to your target server."
  },
  
  {
    "title": "Writing a New Post!",
    "url": "/posts/write-a-new-post/",
    "categories": "Blogging, Tutorial",
    "tags": "writing",
    "date": "2019-08-08 15:10:00 +0900",
    





    
    "snippet": "이 튜토리얼은 Chirpy 템플릿에서 게시물을 작성하는 방법을 안내합니다. Jekyll을 이전에 사용해봤더라도 읽어볼 가치가 있습니다. 많은 기능들이 특정 변수 설정을 필요로 하기 때문이에요.이름 짓기와 경로YYYY-MM-DD-제목.확장자 형식으로 새 파일을 만들고 루트 디렉토리의 _posts 폴더에 넣으세요. 확장자는 반드시 md나 markdown ...",
    "content": "이 튜토리얼은 Chirpy 템플릿에서 게시물을 작성하는 방법을 안내합니다. Jekyll을 이전에 사용해봤더라도 읽어볼 가치가 있습니다. 많은 기능들이 특정 변수 설정을 필요로 하기 때문이에요.이름 짓기와 경로YYYY-MM-DD-제목.확장자 형식으로 새 파일을 만들고 루트 디렉토리의 _posts 폴더에 넣으세요. 확장자는 반드시 md나 markdown 중 하나여야 해요. 파일 만드는 시간을 절약하고 싶다면 Jekyll-Compose 플러그인 사용을 고려해보세요.머리말기본적으로 게시물 맨 위에 다음과 같은 머리말을 채워넣어야 해요:---title: 제목date: YYYY-MM-DD HH:MM:SS +/-TTTTcategories: [대분류, 소분류]tags: [태그]     # 태그 이름은 항상 소문자여야 해요---  게시물의 레이아웃_은 기본적으로 post로 설정되어 있어서 머리말 블록에 _layout 변수를 추가할 필요가 없어요.날짜의 시간대게시물의 발행 날짜를 정확히 기록하려면 _config.yml의 timezone을 설정할 뿐만 아니라 머리말 블록의 date 변수에 게시물의 시간대도 제공해야 해요. 형식: +/-TTTT, 예를 들면 +0800.카테고리와 태그각 게시물의 categories는 최대 두 개의 요소를 포함하도록 설계되었고, tags의 요소 수는 0부터 무한대까지 가능해요. 예를 들면:---categories: [동물, 곤충]tags: [벌]---작성자 정보게시물의 작성자 정보는 보통 _머리말_에 채울 필요가 없어요. 기본적으로 설정 파일의 social.name과 social.links의 첫 번째 항목에서 가져오게 될 거예요. 하지만 다음과 같이 직접 설정할 수도 있어요:_data/authors.yml에 작성자 정보 추가하기 (이 파일이 없다면 만들어주세요).&lt;작성자_id&gt;:  name: &lt;전체 이름&gt;  twitter: &lt;작성자의_트위터&gt;  url: &lt;작성자의_홈페이지&gt;그리고 author를 사용해 단일 항목을 지정하거나 authors를 사용해 여러 항목을 지정할 수 있어요:---author: &lt;작성자_id&gt;                     # 단일 항목# 또는authors: [&lt;작성자1_id&gt;, &lt;작성자2_id&gt;]   # 여러 항목---author 키도 여러 항목을 식별할 수 있어요.  _data/authors.yml 파일에서 작성자 정보를 읽는 것의 장점은 페이지에 twitter:creator 메타 태그가 생긴다는 거예요. 이는 Twitter Cards를 풍부하게 만들고 SEO에 좋아요.게시물 설명기본적으로 게시물의 첫 문장들이 홈페이지의 게시물 목록, 추가 읽기 섹션, RSS 피드의 XML에 표시돼요. 게시물에 대해 자동 생성된 설명을 표시하고 싶지 않다면 _머리말_의 description 필드를 사용해 다음과 같이 사용자 정의할 수 있어요:---description: 게시물의 짧은 요약.---또한 description 텍스트는 게시물 페이지의 게시물 제목 아래에도 표시될 거예요.목차기본적으로 목차(TOC)는 게시물의 오른쪽 패널에 표시돼요. 전역적으로 끄고 싶다면 _config.yml로 가서 toc 변수의 값을 false로 설정하세요. 특정 게시물에 대해 TOC를 끄고 싶다면 게시물의 머리말에 다음을 추가하세요:---toc: false---댓글댓글의 전역 스위치는 _config.yml 파일의 comments.active 변수로 정의돼요. 이 변수에 대한 댓글 시스템을 선택하면 모든 게시물에 대해 댓글이 켜질 거예요.특정 게시물에 대해 댓글을 닫고 싶다면 게시물의 머리말에 다음을 추가하세요:---comments: false---미디어_Chirpy_에서는 이미지, 오디오, 비디오를 미디어 리소스라고 해요.URL 접두사때때로 게시물에서 여러 리소스에 대해 중복된 URL 접두사를 정의해야 할 때가 있어요. 이는 지루한 작업이지만 두 개의 매개변수를 설정하면 피할 수 있어요.      CDN을 사용해 미디어 파일을 호스팅하고 있다면 _config.yml에서 cdn을 지정할 수 있어요. 그러면 사이트 아바타와 게시물의 미디어 리소스 URL에 CDN 도메인 이름이 접두사로 붙게 돼요.    cdn: https://cdn.com            현재 게시물/페이지 범위에 대한 리소스 경로 접두사를 지정하려면 게시물의 _머리말_에서 media_subpath를 설정하세요:    ---media_subpath: /경로/미디어/---      site.cdn과 page.media_subpath 옵션은 개별적으로 또는 조합해서 사용해 최종 리소스 URL을 유연하게 구성할 수 있어요: [site.cdn/][page.media_subpath/]파일.확장자이미지캡션이미지 다음 줄에 이탤릭체를 추가하면 캡션이 되어 이미지 아래에 나타나요:![이미지-설명](/경로/이미지)_이미지 캡션_크기이미지가 로드될 때 페이지 내용 레이아웃이 변하는 것을 방지하려면 각 이미지의 너비와 높이를 설정해야 해요.![데스크톱 보기](/assets/img/sample/mockup.png){: width=\"700\" height=\"400\" }  SVG의 경우 최소한 _너비_를 지정해야 해요. 그렇지 않으면 렌더링되지 않아요._Chirpy v5.0.0_부터 height와 width는 약어를 지원해요(height → h, width → w). 다음 예시는 위와 같은 효과를 가져요:![데스크톱 보기](/assets/img/sample/mockup.png){: w=\"700\" h=\"400\" }위치기본적으로 이미지는 중앙에 배치되지만 normal, left, right 클래스 중 하나를 사용해 위치를 지정할 수 있어요.  위치가 지정되면 이미지 캡션을 추가하면 안 돼요.      일반 위치    아래 예시에서 이미지는 왼쪽 정렬될 거예요:    ![데스크톱 보기](/assets/img/sample/mockup.png){: .normal }            왼쪽으로 띄우기    ![데스크톱 보기](/assets/img/sample/mockup.png){: .left }            오른쪽으로 띄우기    ![데스크톱 보기](/assets/img/sample/mockup.png){: .right }      다크/라이트 모드다크/라이트 모드에서 테마 선호도에 따라 이미지를 표시할 수 있어요. 이를 위해서는 다크 모드용 이미지와 라이트 모드용 이미지 두 개를 준비하고 특정 클래스(dark 또는 light)를 지정해야 해요:![라이트 모드 전용](/경로/라이트-모드.png){: .light }![다크 모드 전용](/경로/다크-모드.png){: .dark }그림자프로그램 창의 스크린샷에 그림자 효과를 줄 수 있어요:![데스크톱 보기](/assets/img/sample/mockup.png){: .shadow }미리보기 이미지게시물 상단에 이미지를 추가하고 싶다면 해상도가 1200 x 630인 이미지를 제공해주세요. 이미지 종횡비가 1.91 : 1이 아니면 이미지가 크기 조정되고 잘릴 수 있어요.이러한 전제 조건을 알았다면 이미지 속성 설정을 시작할 수 있어요:---image:  path: /경로/이미지  alt: 이미지 대체 텍스트---media_subpath도 미리보기 이미지에 전달할 수 있어요. 즉, 이미 설정되어 있다면 path 속성에는 이미지 파일 이름만 필요해요.간단히 사용하려면 image만 사용해 경로를 정의할 수도 있어요.---image: /경로/이미지---LQIP미리보기 이미지의 경우:---image:  lqip: /경로/lqip-파일 # 또는 base64 URI---  LQIP는 \"Text and Typography\" 게시물의 미리보기 이미지에서 관찰할 수 있어요.일반 이미지의 경우:![이미지 설명](/경로/이미지){: lqip=\"/경로/lqip-파일\" }비디오소셜 미디어 플랫폼의 비디오를 삽입하려면 다음 구문을 사용하세요:{% include embed/{Platform}.html id='{ID}' %}여기서 Platform은 플랫폼 이름의 소문자이고 ID는 비디오 ID예요.다음 표는 주어진 비디오 URL에서 필요한 두 매개변수를 얻는 방법을 보여주며, 현재 지원되는 비디오 플랫폼도 알 수 있어요.            비디오 URL      Platform      ID                  https://www.youtube.com/watch?v=H-B46URT4mg      youtube      H-B46URT4mg              https://www.twitch.tv/videos/1634779211      twitch      1634779211              https://www.bilibili.com/video/BV1Q44y1B7Wf      bilibili      BV1Q44y1B7Wf      이렇게 하면 Liquid 문법 오류를 피하고 원래 의도한 내용을 정확하게 전달할 수 있어요."
  },
  
  {
    "title": "Text and Typography",
    "url": "/posts/text-and-typography/",
    "categories": "Blogging, Demo",
    "tags": "typography",
    "date": "2019-08-08 12:33:00 +0900",
    





    
    "snippet": "제목H1 — 제목H2 — 제목H3 — 제목H4 — 제목단락Quisque egestas convallis ipsum, ut sollicitudin risus tincidunt a. Maecenas interdum malesuada egestas. Duis consectetur porta risus, sit amet vulputate urna facili...",
    "content": "제목H1 — 제목H2 — 제목H3 — 제목H4 — 제목단락Quisque egestas convallis ipsum, ut sollicitudin risus tincidunt a. Maecenas interdum malesuada egestas. Duis consectetur porta risus, sit amet vulputate urna facilisis ac. Phasellus semper dui non purus ultrices sodales. Aliquam ante lorem, ornare a feugiat ac, finibus nec mauris. Vivamus ut tristique nisi. Sed vel leo vulputate, efficitur risus non, posuere mi. Nullam tincidunt bibendum rutrum. Proin commodo ornare sapien. Vivamus interdum diam sed sapien blandit, sit amet aliquam risus mattis. Nullam arcu turpis, mollis quis laoreet at, placerat id nibh. Suspendisse venenatis eros eros.리스트순서가 있는 리스트  첫째  둘째  셋째순서가 없는 리스트  장          절                  문단                    할일 리스트  업무          1단계      2단계      3단계      설명 리스트  태양  지구가 공전하는 별  달  태양 빛을 반사하여 보이는 지구의 자연 위성인용문  이 줄은 _인용문_을 보여줍니다.프롬프트  tip 유형 프롬프트의 예시입니다.  info 유형 프롬프트의 예시입니다.  warning 유형 프롬프트의 예시입니다.  danger 유형 프롬프트의 예시입니다.표            회사      연락처      국가                  Alfreds Futterkiste      Maria Anders      독일              Island Trading      Helen Bennett      영국              Magazzini Alimentari Riuniti      Giovanni Rovelli      이탈리아      링크http://127.0.0.1:4000각주후크를 클릭하면 각주1로 이동하며, 여기 다른 각주2가 있습니다.인라인 코드이것은 인라인 코드의 예시입니다.파일 경로여기 /path/to/the/file.extend가 있습니다.코드 블록일반이것은 구문 강조와 줄 번호가 없는 일반적인 코드 스니펫입니다.특정 언어if [ $? -ne 0 ]; then  echo \"명령이 성공적이지 않았습니다.\";  #필요한 작업 수행 / 종료fi;특정 파일명@import  \"colors/light-typography\",  \"colors/dark-typography\";수학MathJax에 의해 구동되는 수학:\\[\\begin{equation}  \\sum_{n=1}^\\infty 1/n^2 = \\frac{\\pi^2}{6}  \\label{eq:series}\\end{equation}\\]우리는 방정식을 \\eqref{eq:series}로 참조할 수 있습니다.$a \\ne 0$일 때, $ax^2 + bx + c = 0$의 두 해는\\[x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}\\]Mermaid SVG gantt  title  mermaid에 GANTT 다이어그램 기능 추가  사과 :a, 2017-07-20, 1w  바나나 :crit, b, 2017-07-23, 1d  체리 :active, c, after b a, 1d이미지기본 (캡션 포함)전체 화면 너비와 중앙 정렬왼쪽 정렬왼쪽으로 띄우기Praesent maximus aliquam sapien. Sed vel neque in dolor pulvinar auctor. Maecenas pharetra, sem sit amet interdum posuere, tellus lacus eleifend magna, ac lobortis felis ipsum id sapien. Proin ornare rutrum metus, ac convallis diam volutpat sit amet. Phasellus volutpat, elit sit amet tincidunt mollis, felis mi scelerisque mauris, ut facilisis leo magna accumsan sapien. In rutrum vehicula nisl eget tempor. Nullam maximus ullamcorper libero non maximus. Integer ultricies velit id convallis varius. Praesent eu nisl eu urna finibus ultrices id nec ex. Mauris ac mattis quam. Fusce aliquam est nec sapien bibendum, vitae malesuada ligula condimentum.오른쪽으로 띄우기Praesent maximus aliquam sapien. Sed vel neque in dolor pulvinar auctor. Maecenas pharetra, sem sit amet interdum posuere, tellus lacus eleifend magna, ac lobortis felis ipsum id sapien. Proin ornare rutrum metus, ac convallis diam volutpat sit amet. Phasellus volutpat, elit sit amet tincidunt mollis, felis mi scelerisque mauris, ut facilisis leo magna accumsan sapien. In rutrum vehicula nisl eget tempor. Nullam maximus ullamcorper libero non maximus. Integer ultricies velit id convallis varius. Praesent eu nisl eu urna finibus ultrices id nec ex. Mauris ac mattis quam. Fusce aliquam est nec sapien bibendum, vitae malesuada ligula condimentum.다크/라이트 모드 &amp; 그림자아래 이미지는 테마 선호도에 따라 다크/라이트 모드로 전환되며, 그림자가 있습니다.비디오역 각주            각주 출처 &#8617;&#xfe0e;              두 번째 각주 출처 &#8617;&#xfe0e;      "
  }
  
]

